<?php

/**
 * PluginaBlogItem
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class PluginaBlogItem extends BaseaBlogItem
{  
  /**
   * These date methods are use in the routing of the permalink
   */
  public function getYear()
  {
    return date('Y', strtotime($this->getPublishedAt()));
  }

  public function getMonth()
  {
    return date('m', strtotime($this->getPublishedAt()));
  }

  public function getDay()
  {
    return date('d', strtotime($this->getPublishedAt()));
  }
  
  public function getFeedSlug()
  {
    return $this->slug;
  }
  
  public function postInsert($event)
  {
    $page = new aPage();
    $page['slug'] = 'aBlog-'.$this['id'];
    $page->save();
    $slot = $page->createSlot('aRichText');
    $slot->value = 'This is your body.';
    $slot->save();
    $page->newAreaVersion('blog-body', 'add',
      array(
        'permid' => 1, 
        'slot' => $slot));
    $this->Page = $page;
    $this->slug = 'untitled-'.$this['id'];
    $this->title = 'untitled';
    $this->save();
  }
  
  public function postDelete($event)
  {
    $this->Page->delete();
  }

  /**
   *
   * @param string $areas Array of areas to retrieve text for
   * @param int $limit Number of characters to restrict retrieval to
   * @return string
   */
  public function getTextForAreas($areas = array(), $limit = null)
  {
    $text = '';
    foreach($areas as $area)
    {
      foreach($this->Page->getArea($area) as $slot)
      {
        if(method_exists($slot, 'getSearchText'))
        {
          $text .= strip_tags($slot->getValue());
        }
      }
    }
    if(!is_null($limit))
    {
      $text = substr($text, 0, $limit);
    }

    return $text;
  }

  /**
   *
   * @param string $area Name of an area
   * @param int $limit Number of characters to restrict retrieval to
   * @return string
   */
  public function getTextForArea($area, $limit = null)
  {
    return $this->getTextForAreas(array($area), $limit);
  }
  
  public function getFeedText()
  {
    $text = '';
    foreach($this->Page->getArea('blog-body') as $slot)
    {
      if(method_exists($slot, 'getSearchText'))
      {
        $text .= $slot->getSearchText();
      }
    }
    return $text;
  }
}
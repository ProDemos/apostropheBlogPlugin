<?php
/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class PluginaBlogItemTable extends Doctrine_Table
{
  /**
   * Builds the query for blog posts and events based on the request parameters.
   * 
   * @param Doctrine_Query $q
   * @param string $tableName This is going to be either aBlogPost or aBlogEvent
   * @return Doctrrin_Query $q
   */
  public function buildQuery(sfWebRequest $request, $tableName = 'aBlogItem', Doctrine_Query $q = null)
  {
    if(is_null($q))
      $q = Doctrine_Query::create()->from($tableName.' a');
  
    if ($request->getParameter('tag'))
    {
      $q = PluginTagTable::getObjectTaggedWithQuery($tableName, $request->getParameter('tag'), null, array('nb_common_tag' => 1));
    }
    
    if ($request->getParameter('search'))
    {
      $q = Doctrine::getTable($tableName)->addSearchQuery($q, $request->getParameter('search'));
    }
    $q = Doctrine::getTable($tableName)->addDateRangeQuery($request, $q);
        
    $rootAlias = $q->getRootAlias();

    if ($request->getParameter('cat'))
    {
      $q->innerJoin($rootAlias.'.Category c WITH c.slug = ? ', $request->getParameter('cat'));
    }
    
    $q->addWhere($q->getRootAlias().'.published = ?', true);

    return $q;
  }
  
  /**
   * This is a stub method for now.
   * 
   * @param Doctrine_Query $q
   * @param sfWebRequest $request
   * @return Doctrine_Query $q
   * @see aBlogPost aBlogEvent
   */
  public function addDateRangeQuery(sfWebRequest $request, Doctrine_Query $q = null)
  {
    if (!$q)
    {
      $q = $this->createQuery('p');
    }

    return $q;
  }
  
  // Required wrappers for Lucene support. These are stubs for customization
  
  public function getLuceneIndex()
  {
    return aZendSearch::getLuceneIndex($this);
  }
   
  public function getLuceneIndexFile()
  {
    return aZendSearch::getLuceneIndexFile($this);
  }


  public function searchLucene($luceneQuery)
  {
    return aZendSearch::searchLucene($this, $luceneQuery);
  }
  
  public function rebuildLuceneIndex()
  {
    return aZendSearch::rebuildLuceneIndex($this);
  }
  
  public function optimizeLuceneIndex()
  {
    return aZendSearch::optimizeLuceneIndex($this);
  }
  
  public function addSearchQuery(Doctrine_Query $q = null, $luceneQuery)
  {
    return aZendSearch::addSearchQuery($this, $q, $luceneQuery);
  }
}

<?php

/**
 * PluginaEventTable
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class PluginaEventTable extends aBlogItemTable
{
  protected $categoryColumn = 'events';
  private static $engineCategoryCache;
  /**
   * Returns an instance of this class.
   *
   * @return object PluginaEventTable
   */
  public static function getInstance()
  {
    return Doctrine::getTable('aEvent');
  }

  public function filterByYMD($year=null, $month=null, $day=null, $q=null)
  {
    $rootAlias = $q->getRootAlias();

    $sYear = isset($year)? $year : 0;
    $sMonth = isset($month)? $month : 0;
    $sDay = isset($day)? $day : 0;
    $startDate = "$sYear-$sMonth-$sDay 00:00:00";

    $eYear = isset($year)? $year : 3000;
    $eMonth = isset($month)? $month : 12;
    $eDay = isset($day)? $day : 31;
    $endDate = "$eYear-$eMonth-$eDay 23:59:59";

    $q->addWhere("$rootAlias.start_date <= ? AND $rootAlias.end_date >= ?", array($endDate, $startDate));
  }

  public function addUpcoming(Doctrine_Query $q, $limit = null)
  {
    $q->orderBy('start_date');
    $q->addWhere('DATE(start_date) >= DATE(NOW()) OR DATE(end_date) >= DATE(NOW())');
    if(!is_null($limit))
      $q->limit($limit);
  }

  public function getEngineCategories()
  {
    if(!isset(self::$engineCategoryCache))
    {
      $engines = Doctrine::getTable('aPage')->createQuery()
        ->leftJoin('aPage.BlogCategories Categories')
        ->addWhere('engine = ?', 'aEvent')
        ->addWhere('admin != ?', true)
        ->execute(array(), Doctrine_Core::HYDRATE_ARRAY);

      $engineCache = array();
      foreach($engines as $engine)
      {
        $engineCache[$engine['slug']] = array();
        foreach($engine['BlogCategories'] as $category)
          $engineCache[$engine['slug']][] = $category['name'];
      }
      self::$engineCategoryCache = $engineCache;
    }

    return self::$engineCategoryCache;
  }
}